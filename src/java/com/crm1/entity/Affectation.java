package com.crm1.entity;
// Generated Mar 30, 2018 5:12:53 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Affectation generated by hbm2java
 */
@Entity
@Table(name="affectation"
    ,catalog="crm"
)
public class Affectation  implements java.io.Serializable {


     private int idRec;
     private Affectation affectationByIntervLog;
     private Affectation affectationByRespTech;
     private Personnel personnel;
     private Produit produit;
     private Reclamation reclamation;
     private String dexExpert;
     private Date dateDebut;
     private Date dateFin;
     private Set<Affectation> affectationsForIntervLog = new HashSet<Affectation>(0);
     private Set<Affectation> affectationsForRespTech = new HashSet<Affectation>(0);

    public Affectation() {
    }

	
    public Affectation(Affectation affectationByIntervLog, Affectation affectationByRespTech, Personnel personnel, Produit produit, Reclamation reclamation, String dexExpert, Date dateDebut, Date dateFin) {
        this.affectationByIntervLog = affectationByIntervLog;
        this.affectationByRespTech = affectationByRespTech;
        this.personnel = personnel;
        this.produit = produit;
        this.reclamation = reclamation;
        this.dexExpert = dexExpert;
        this.dateDebut = dateDebut;
        this.dateFin = dateFin;
    }
    public Affectation(Affectation affectationByIntervLog, Affectation affectationByRespTech, Personnel personnel, Produit produit, Reclamation reclamation, String dexExpert, Date dateDebut, Date dateFin, Set<Affectation> affectationsForIntervLog, Set<Affectation> affectationsForRespTech) {
       this.affectationByIntervLog = affectationByIntervLog;
       this.affectationByRespTech = affectationByRespTech;
       this.personnel = personnel;
       this.produit = produit;
       this.reclamation = reclamation;
       this.dexExpert = dexExpert;
       this.dateDebut = dateDebut;
       this.dateFin = dateFin;
       this.affectationsForIntervLog = affectationsForIntervLog;
       this.affectationsForRespTech = affectationsForRespTech;
    }
   
     @GenericGenerator(name="generator", strategy="foreign", parameters=@Parameter(name="property", value="reclamation"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="Id_rec", unique=true, nullable=false)
    public int getIdRec() {
        return this.idRec;
    }
    
    public void setIdRec(int idRec) {
        this.idRec = idRec;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="interv_log", nullable=false)
    public Affectation getAffectationByIntervLog() {
        return this.affectationByIntervLog;
    }
    
    public void setAffectationByIntervLog(Affectation affectationByIntervLog) {
        this.affectationByIntervLog = affectationByIntervLog;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="resp_tech", nullable=false)
    public Affectation getAffectationByRespTech() {
        return this.affectationByRespTech;
    }
    
    public void setAffectationByRespTech(Affectation affectationByRespTech) {
        this.affectationByRespTech = affectationByRespTech;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="technicien", nullable=false)
    public Personnel getPersonnel() {
        return this.personnel;
    }
    
    public void setPersonnel(Personnel personnel) {
        this.personnel = personnel;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="Chef_produit", nullable=false)
    public Produit getProduit() {
        return this.produit;
    }
    
    public void setProduit(Produit produit) {
        this.produit = produit;
    }

@OneToOne(fetch=FetchType.LAZY)@PrimaryKeyJoinColumn
    public Reclamation getReclamation() {
        return this.reclamation;
    }
    
    public void setReclamation(Reclamation reclamation) {
        this.reclamation = reclamation;
    }

    
    @Column(name="dex_expert", nullable=false)
    public String getDexExpert() {
        return this.dexExpert;
    }
    
    public void setDexExpert(String dexExpert) {
        this.dexExpert = dexExpert;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date_debut", nullable=false, length=10)
    public Date getDateDebut() {
        return this.dateDebut;
    }
    
    public void setDateDebut(Date dateDebut) {
        this.dateDebut = dateDebut;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date_fin", nullable=false, length=10)
    public Date getDateFin() {
        return this.dateFin;
    }
    
    public void setDateFin(Date dateFin) {
        this.dateFin = dateFin;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="affectationByIntervLog")
    public Set<Affectation> getAffectationsForIntervLog() {
        return this.affectationsForIntervLog;
    }
    
    public void setAffectationsForIntervLog(Set<Affectation> affectationsForIntervLog) {
        this.affectationsForIntervLog = affectationsForIntervLog;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="affectationByRespTech")
    public Set<Affectation> getAffectationsForRespTech() {
        return this.affectationsForRespTech;
    }
    
    public void setAffectationsForRespTech(Set<Affectation> affectationsForRespTech) {
        this.affectationsForRespTech = affectationsForRespTech;
    }




}


